import { Prisma } from '@prisma/client';

export type BibleTranslationType = Prisma.TranslationGetPayload<{
  include: {
    books: true;
  };
}>;

export type BibleVerseWithTranslationType = Prisma.ChapterVerseGetPayload<{
  include: {
    translation: true;
  };
}>;

enum BibleBookAbbreviations {
  GEN = 'Genesis',
  EXO = 'Exodus',
  LEV = 'Leviticus',
  NUM = 'Numbers',
  DEU = 'Deuteronomy',
  JOS = 'Joshua',
  JDG = 'Judges',
  RUT = 'Ruth',
  '1SA' = '1 Samuel',
  '2SA' = '2 Samuel',
  '1KI' = '1 Kings',
  '2KI' = '2 Kings',
  '1CH' = '1 Chronicles',
  '2CH' = '2 Chronicles',
  EZR = 'Ezra',
  NEH = 'Nehemiah',
  EST = 'Esther',
  JOB = 'Job',
  PSA = 'Psalms',
  PRO = 'Proverbs',
  ECC = 'Ecclesiastes',
  SNG = 'Song of Solomon',
  ISA = 'Isaiah',
  JER = 'Jeremiah',
  LAM = 'Lamentations',
  EZK = 'Ezekiel',
  DAN = 'Daniel',
  HOS = 'Hosea',
  JOL = 'Joel',
  AMO = 'Amos',
  OBA = 'Obadiah',
  JON = 'Jonah',
  MIC = 'Micah',
  NAM = 'Nahum',
  HAB = 'Habakkuk',
  ZEP = 'Zephaniah',
  HAG = 'Haggai',
  ZEC = 'Zechariah',
  MAL = 'Malachi',
  MAT = 'Matthew',
  MRK = 'Mark',
  LUK = 'Luke',
  JHN = 'John',
  ACT = 'Acts',
  ROM = 'Romans',
  '1CO' = '1 Corinthians',
  '2CO' = '2 Corinthians',
  GAL = 'Galatians',
  EPH = 'Ephesians',
  PHP = 'Philippians',
  COL = 'Colossians',
  '1TH' = '1 Thessalonians',
  '2TH' = '2 Thessalonians',
  '1TI' = '1 Timothy',
  '2TI' = '2 Timothy',
  TIT = 'TITUS',
  PHM = 'Philemon',
  HEB = 'Hebrews',
  JAS = 'James',
  '1PE' = '1 Peter',
  '2PE' = '2 Peter',
  '1JN' = '1 John',
  '2JN' = '2 John',
  '3JN' = '3 John',
  JUD = 'Jude',
  REV = 'Revelation',
}

/**
 * Defines a map that maps the book ID to the numerical order of the book.
 */
export const OSIS_BOOK_ORDER = new Map([
  [1, 'GEN'],
  [2, 'EXO'],
  [3, 'LEV'],
  [4, 'NUM'],
  [5, 'DEU'],
  [6, 'JOS'],
  [7, 'JDG'],
  [8, 'RUT'],
  [9, '1SA'],
  [10, '2SA'],
  [11, '1KI'],
  [12, '2KI'],
  [13, '1CH'],
  [14, '2CH'],
  [15, 'EZR'],
  [16, 'NEH'],
  [17, 'EST'],
  [18, 'JOB'],
  [19, 'PSA'],
  [20, 'PRO'],
  [21, 'ECC'],
  [22, 'SNG'],
  [23, 'ISA'],
  [24, 'JER'],
  [25, 'LAM'],
  [26, 'EZK'],
  [27, 'DAN'],
  [28, 'HOS'],
  [29, 'JOL'],
  [30, 'AMO'],
  [31, 'OBA'],
  [32, 'JON'],
  [33, 'MIC'],
  [34, 'NAM'],
  [35, 'HAB'],
  [36, 'ZEP'],
  [37, 'HAG'],
  [38, 'ZEC'],
  [39, 'MAL'],
  [40, 'MAT'],
  [41, 'MRK'],
  [42, 'LUK'],
  [43, 'JHN'],
  [44, 'ACT'],
  [45, 'ROM'],
  [46, '1CO'],
  [47, '2CO'],
  [48, 'GAL'],
  [49, 'EPH'],
  [50, 'PHP'],
  [51, 'COL'],
  [52, '1TH'],
  [53, '2TH'],
  [54, '1TI'],
  [55, '2TI'],
  [56, 'TIT'],
  [57, 'PHM'],
  [58, 'HEB'],
  [59, 'JAS'],
  [60, '1PE'],
  [61, '2PE'],
  [62, '1JN'],
  [63, '2JN'],
  [64, '3JN'],
  [65, 'JUD'],
  [66, 'REV'],
]);

/**
 * Defines a map that maps the book ID to the number of chapters the book has.
 */
export const OSIS_BOOK_CHAPTER_COUNT = new Map([
  ['GEN', 50],
  ['EXO', 40],
  ['LEV', 27],
  ['NUM', 36],
  ['DEU', 34],
  ['JOS', 24],
  ['JDG', 21],
  ['RUT', 4],
  ['1SA', 31],
  ['2SA', 24],
  ['1KI', 22],
  ['2KI', 25],
  ['1CH', 29],
  ['2CH', 36],
  ['EZR', 10],
  ['NEH', 13],
  ['EST', 10],
  ['JOB', 42],
  ['PSA', 150],
  ['PRO', 31],
  ['ECC', 12],
  ['SNG', 8],
  ['ISA', 66],
  ['JER', 52],
  ['LAM', 5],
  ['EZK', 48],
  ['DAN', 12],
  ['HOS', 14],
  ['JOL', 3],
  ['AMO', 9],
  ['OBA', 1],
  ['JON', 4],
  ['MIC', 7],
  ['NAM', 3],
  ['HAB', 3],
  ['ZEP', 3],
  ['HAG', 2],
  ['ZEC', 14],
  ['MAL', 4],
  ['MAT', 28],
  ['MRK', 16],
  ['LUK', 24],
  ['JHN', 21],
  ['ACT', 28],
  ['ROM', 16],
  ['1CO', 16],
  ['2CO', 13],
  ['GAL', 6],
  ['EPH', 6],
  ['PHP', 4],
  ['COL', 4],
  ['1TH', 5],
  ['2TH', 3],
  ['1TI', 6],
  ['2TI', 4],
  ['TIT', 3],
  ['PHM', 1],
  ['HEB', 13],
  ['JAS', 5],
  ['1PE', 5],
  ['2PE', 3],
  ['1JN', 5],
  ['2JN', 1],
  ['3JN', 1],
  ['JUD', 1],
  ['REV', 22],
]);
